{"version":3,"sources":["../src/index.ts","../src/utils.ts","../src/withAuth.ts","../src/requireAuth.ts"],"sourcesContent":["import {\n  Clerk,\n  clerkClient,\n  ClerkExpressRequireAuth,\n  ClerkExpressWithAuth,\n  createClerkClient,\n  setClerkApiKey,\n  setClerkApiVersion,\n  setClerkHttpOptions,\n  setClerkServerApiUrl,\n} from './clerkClient';\nimport { createClerkExpressRequireAuth } from './clerkExpressRequireAuth';\nimport { createClerkExpressWithAuth } from './clerkExpressWithAuth';\nimport type {\n  ClerkMiddleware,\n  ClerkMiddlewareOptions,\n  LooseAuthProp,\n  RequireAuthProp,\n  StrictAuthProp,\n  WithAuthProp,\n} from './types';\n\nexport * from '@clerk/backend';\n/**\n * The order of these exports is important, as we want Clerk from clerk/sdk-node\n * to shadow the Clerk export from clerk/backend, because it needs to support\n * 2 additional apis: clerk.expressWithAuth, clerk.expressRequireAuth\n */\nexport {\n  createClerkClient,\n  clerkClient,\n  setClerkApiKey,\n  setClerkApiVersion,\n  setClerkHttpOptions,\n  setClerkServerApiUrl,\n  Clerk,\n  ClerkExpressRequireAuth,\n  ClerkExpressWithAuth,\n};\n\nconst {\n  users,\n  smsMessages,\n  sessions,\n  emailAddresses,\n  phoneNumbers,\n  emails,\n  invitations,\n  organizations,\n  clients,\n  allowlistIdentifiers,\n} = clerkClient;\n\nexport {\n  users,\n  smsMessages,\n  sessions,\n  emailAddresses,\n  phoneNumbers,\n  emails,\n  invitations,\n  organizations,\n  clients,\n  allowlistIdentifiers,\n};\n\nexport default clerkClient;\n\nexport type { LooseAuthProp, StrictAuthProp, WithAuthProp, RequireAuthProp, ClerkMiddleware, ClerkMiddlewareOptions };\n\nexport { createClerkExpressRequireAuth };\nexport { createClerkExpressWithAuth };\n\nexport { withAuth } from './withAuth';\nexport { requireAuth } from './requireAuth';\n","import { IncomingMessage, ServerResponse } from 'http';\n\n// https://nextjs.org/docs/api-routes/api-middlewares#connectexpress-middleware-support\nexport function runMiddleware(req: IncomingMessage, res: ServerResponse, fn: (...args: any) => any) {\n  return new Promise((resolve, reject) => {\n    // @ts-ignore\n    void fn(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n      return resolve(result);\n    });\n  });\n}\n","import { Request, Response } from 'express';\n\nimport { API_URL, clerkClient, PUBLISHABLE_KEY } from './clerkClient';\nimport { createClerkExpressWithAuth } from './clerkExpressWithAuth';\nimport { ClerkMiddlewareOptions, WithAuthProp } from './types';\nimport { runMiddleware } from './utils';\n\ntype ExpressApiHandlerWithAuth<T = any> = (req: WithAuthProp<Request>, res: Response<T>) => void | Promise<void>;\n\nexport function withAuth(handler: ExpressApiHandlerWithAuth, options?: ClerkMiddlewareOptions): any {\n  return async (req: Request, res: Response) => {\n    await runMiddleware(\n      req,\n      res,\n      createClerkExpressWithAuth({\n        clerkClient,\n        apiUrl: API_URL,\n        publishableKey: PUBLISHABLE_KEY,\n      })(options),\n    );\n\n    return handler(req as WithAuthProp<Request>, res);\n  };\n}\n","import { Request, Response } from 'express';\n\nimport { API_URL, clerkClient, PUBLISHABLE_KEY } from './clerkClient';\nimport { createClerkExpressRequireAuth } from './clerkExpressRequireAuth';\nimport { ClerkMiddlewareOptions, RequireAuthProp } from './types';\nimport { runMiddleware } from './utils';\n\ntype ExpressApiHandlerRequireAuth<T = any> = (req: RequireAuthProp<Request>, res: Response<T>) => void | Promise<void>;\n\nexport function requireAuth(handler: ExpressApiHandlerRequireAuth, options?: ClerkMiddlewareOptions): any {\n  return async (req: Request, res: Response) => {\n    await runMiddleware(\n      req,\n      res,\n      createClerkExpressRequireAuth({\n        clerkClient,\n        apiUrl: API_URL,\n        publishableKey: PUBLISHABLE_KEY,\n      })(options),\n    );\n\n    return handler(req as RequireAuthProp<Request>, res);\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAsBA,cAAc;;;ACnBP,SAAS,cAAc,KAAsB,KAAqB,IAA2B;AAClG,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtC,SAAK,GAAG,KAAK,KAAK,YAAU;AAC1B,UAAI,kBAAkB,OAAO;AAC3B,eAAO,OAAO,MAAM;AAAA,MACtB;AACA,aAAO,QAAQ,MAAM;AAAA,IACvB,CAAC;AAAA,EACH,CAAC;AACH;;;ACJO,SAAS,SAAS,SAAoC,SAAuC;AAClG,SAAO,OAAO,KAAc,QAAkB;AAC5C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA,2BAA2B;AAAA,QACzB;AAAA,QACA,QAAQ;AAAA,QACR,gBAAgB;AAAA,MAClB,CAAC,EAAE,OAAO;AAAA,IACZ;AAEA,WAAO,QAAQ,KAA8B,GAAG;AAAA,EAClD;AACF;;;ACdO,SAAS,YAAY,SAAuC,SAAuC;AACxG,SAAO,OAAO,KAAc,QAAkB;AAC5C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA,8BAA8B;AAAA,QAC5B;AAAA,QACA,QAAQ;AAAA,QACR,gBAAgB;AAAA,MAClB,CAAC,EAAE,OAAO;AAAA,IACZ;AAEA,WAAO,QAAQ,KAAiC,GAAG;AAAA,EACrD;AACF;;;AHiBA,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;AAeJ,IAAO,cAAQ;","names":[]}